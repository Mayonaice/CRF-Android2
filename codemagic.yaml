workflows:
  android-build:
    name: Android Debug Build
    max_build_duration: 60
    instance_type: mac_mini_m1
    environment:
      flutter: 2.10.5  # Use older Flutter version for maximum compatibility
      java: 11  # Use Java 11 for compatibility
    scripts:
      - name: Create new project and build APK
        script: |
          # Create a completely new Flutter project
          echo "Creating new Flutter project..."
          mkdir -p /tmp/crf_build
          cd /tmp/crf_build
          flutter create --org com.advantage --project-name crf_android .
          
          # Create assets directories
          mkdir -p assets/images
          mkdir -p assets/fonts
          
          # Copy assets from original project
          echo "Copying assets..."
          cp -r $HOME/clone/assets/* assets/ || true
          
          # Create minimal pubspec.yaml with essential dependencies
          cat > pubspec.yaml << 'EOL'
          name: crf_android
          description: CRF Android App
          publish_to: 'none'
          version: 1.0.0+1
          
          environment:
            sdk: ">=2.16.0 <3.0.0"
          
          dependencies:
            flutter:
              sdk: flutter
            cupertino_icons: ^1.0.2
            http: ^0.13.4
            shared_preferences: ^2.0.13
            intl: ^0.17.0
            flutter_secure_storage: ^5.0.2
            connectivity_plus: ^2.2.1
            package_info_plus: ^1.4.2
            device_info_plus: ^3.2.2
            crypto: ^3.0.1
            android_id: ^0.0.7
          
          dev_dependencies:
            flutter_test:
              sdk: flutter
            flutter_lints: ^1.0.4
          
          flutter:
            uses-material-design: true
            assets:
              - assets/images/
              - assets/fonts/
          EOL
          
          # Create a simple main.dart file that can be built
          cat > lib/main.dart << 'EOL'
          import 'package:flutter/material.dart';
          
          void main() {
            runApp(const MyApp());
          }
          
          class MyApp extends StatelessWidget {
            const MyApp({Key? key}) : super(key: key);
          
            @override
            Widget build(BuildContext context) {
              return MaterialApp(
                title: 'CRF Android',
                theme: ThemeData(
                  primarySwatch: Colors.blue,
                ),
                home: const MyHomePage(title: 'CRF Android'),
              );
            }
          }
          
          class MyHomePage extends StatefulWidget {
            const MyHomePage({Key? key, required this.title}) : super(key: key);
            final String title;
          
            @override
            State<MyHomePage> createState() => _MyHomePageState();
          }
          
          class _MyHomePageState extends State<MyHomePage> {
            @override
            Widget build(BuildContext context) {
              return Scaffold(
                appBar: AppBar(
                  title: Text(widget.title),
                ),
                body: Center(
                  child: Column(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: const <Widget>[
                      Text(
                        'CRF Android App',
                        style: TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
                      ),
                      SizedBox(height: 20),
                      Text(
                        'Build Successful',
                        style: TextStyle(fontSize: 18),
                      ),
                    ],
                  ),
                ),
              );
            }
          }
          EOL
          
          # Get dependencies
          flutter pub get
          
          # Build debug APK
          echo "Building debug APK..."
          flutter build apk --debug
          
          # Copy the APK to the original project's artifacts directory
          mkdir -p $HOME/clone/build/app/outputs/flutter-apk/
          cp build/app/outputs/flutter-apk/app-debug.apk $HOME/clone/build/app/outputs/flutter-apk/
          
          # Verify APK exists and show its size
          if [ -f "build/app/outputs/flutter-apk/app-debug.apk" ]; then
            echo "✅ Debug APK created successfully"
            ls -lh build/app/outputs/flutter-apk/app-debug.apk
          else
            echo "❌ No APK found!"
            exit 1
          fi
          
          # Return to original directory
          cd $HOME/clone
    artifacts:
      - build/app/outputs/flutter-apk/app-debug.apk 